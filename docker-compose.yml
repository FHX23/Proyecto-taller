version: '3.8'

services:
  postgres:
    image: postgres:17-alpine
    container_name: qr-project-db
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${PASSWORD}
      POSTGRES_DB: ${DATABASE}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - qr-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: qr-project-backend
    environment:
      NODE_ENV: production
      PORT: 80
      HOST: postgres  # ðŸ‘ˆ cambio importante
      DB_USERNAME: ${DB_USERNAME}
      PASSWORD: ${PASSWORD}
      DATABASE: ${DATABASE}
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}
      cookieKey: ${cookieKey}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "80:80"
    networks:
      - qr-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: qr-project-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - qr-network
    restart: unless-stopped

networks:
  qr-network:
    driver: bridge

volumes:
  postgres_data:
